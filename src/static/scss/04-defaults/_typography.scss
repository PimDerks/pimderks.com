/*------------------------------------*\
    #TYPOGRAPHY
\*------------------------------------*/

/* Basic vertical rhythm
----------------------------------------------- */

@for $i from 1 through length($breakpoints) {
  $bp: nth($breakpoints, $i);
  $bp-name: nth($bp, 1);
  $bp-code: nth($bp, 2);

  @if map-has-key($typographic-breakpoints, $bp-name) {
    $scope: map-get($typographic-breakpoints, $bp-name);

    @if $i > 1 {
      @include respond-min($bp-name) {

        html * + * {
          margin-top: baseline(1);
        }

      }
    } @else {

      html * + * {
        margin-top: baseline(1);
      }

    }

  }

}

@for $i from 1 through length($breakpoints) {
  $bp: nth($breakpoints, $i);
  $bp-name: nth($bp, 1);
  $bp-code: nth($bp, 2);

  @if map-has-key($typographic-breakpoints, $bp-name) {
    $scope: map-get($typographic-breakpoints, $bp-name);

    // first breakpoint should be without media-query
    @if $i > 1 {

      @include respond-min($bp-name) {

        @each $scale in $typographic-scale-names {
          $scale-name: nth($scale, 1);
          $scale-scale: nth($scale, 2);
          $scale-extra-line-height: nth($scale-scale, 1);
          $scale-margin-bottom: nth($scale-scale, 2);

          %#{$scale-name} {
            @include calculate-scale($bp-name, $scale-name, $scale-extra-line-height);
          }
        }

      }

    } @else {

      @each $scale in $typographic-scale-names {
        $scale-name: nth($scale, 1);
        $scale-scale: nth($scale, 2);
        $scale-extra-line-height: nth($scale-scale, 1);
        $scale-margin-bottom: nth($scale-scale, 2);

        %#{$scale-name} {
          @include calculate-scale($bp-name, $scale-name, $scale-extra-line-height);
        }
      }

    }

  }

}

/* Set base font-sizes configured in $typographic-breakpoints.
----------------------------------------------- */

$base: 16; // browser default

@for $i from 1 through length($breakpoints) {
  $bp: nth($breakpoints, $i);
  $bp-name: nth($bp, 1);
  $bp-code: nth($bp, 2);

  $bp-config: map-get($typographic-breakpoints, $bp-name);

  @if not $bp-config {
    // @warn 'No value found for `#{$bp-name}`. Please make sure it is defined in `$typographic-breakpoints` map.';
  }

  @if map-has-key($typographic-breakpoints, $bp-name) {

    $bp: map-get($breakpoints, $bp-name);
    $font-size: map-get($bp-config, 'font-size');
    $line-height: map-get($bp-config, 'line-height');

    @if $i > 1 {

      @include respond-min($bp-name) {

        html {
          font-size: ($font-size / $base) * 100%;
          line-height: $line-height;
        }

      }

    } @else {

        html {
          font-size: ($font-size / $base) * 100%;
          line-height: $line-height;
        }

    }

  }

}

/* Headings
----------------------------------------------- */
h1,
h2,
h3,
h4,
h5 {

}

h1,
.a-h1 {
  @extend %h1;
}

h2,
.a-h2 {
  @extend %h2;
}

h3,
.a-h3 {
  @extend %h3;
}

h4,
.a-h4 {
  @extend %h4;
}

h5,
.a-h5 {
  @extend %h5;
}

p {
  @extend %base;
}

small {
  @extend %small;
}

h1,
h2,
h3,
h4,
h5 {
  font-family: 'Bree Serif';
}


h1,
h2,
h3{
  color: #eb0064;
}

h1 {
  // margin-right: -8rem;
}


h1,
h2,
.a-h1,
.a-h2 {
  font-weight: normal;
}

h3,
h4,
h5,
.a-h3,
.a-h4,
.a-h5 {
}

$color-h1: get-color('brand');
$color-h2: get-color('brand');
$color-h3: get-color('brand');
$color-h4: get-color('brand');

h1,
.a-h1 {
  &,
  & a {
    color: $color-h1;
  }
}

h2,
.a-h2 {
  &,
  & a {
    color: $color-h2;
  }
}

h3,
.a-h3 {
  &,
  & a {
    color: $color-h3;
  }
}

h4,
.a-h4 {
  &,
  & a {
    color: $color-h4;
  }
}

h5,
.a-h5 {
  &,
  & a {
    color: $color-h4;
  }
}


h1,
h2,
h3,
h4,
h5
.a-h1,
.a-h2,
.a-h3,
.a-h4,
.a-h5 {


  a {
    text-decoration: none;
  }

}



/* As we only use 1 typographic scale in this project, we set the base-font-size for other breakpoints manually.
----------------------------------------------- */

small {
  display: block;
}

.a-small {
  font-size: .66rem;
}

time {
  font-family: 'Playfair Display';
  font-style: italic;
}


.lead {
  font-size: 1.25rem;
  line-height: 2.5rem;

  &::after {
    background: black;
    content: '';
    height: 1px;
    display: block;
    margin: 2.4rem 0;
    opacity: .25;
    width: 5%;
  }

}

h2,
h3 {
  color: black;
  font-size: 1.25rem;
  line-height: 1.6rem;
}

h3 {
  font-size: 1rem;
  margin-bottom: 0;
}

em {
  font-style: italic;
}

li > h3 + * {
  margin-top: 0;
}